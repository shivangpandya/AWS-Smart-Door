swagger: '2.0'
info:
  title: SmartDoor4
  description: 'SmartDoor application, built during the Cloud Coumputing course at New York University.'
  version: 1.0.0
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /getUnknownVisitorImageString:
    get:
      tags:
        - NLU
      summary: Get image for unknown visitor
      operationId: GetUnknownVisitorImageString
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ImageString'
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
      
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - CORS
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods : "'*'"
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: |
                {}
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
  /putVisitorInformation:
    post:
      summary: The endpoint for the Natural Language Understanding API.
      description: |
        This API takes in one or more messages from the client and returns
        one or more messages as a response. The API leverages the NLP
        backend functionality, paired with state and profile information
        and returns a context-aware reply.
      tags:
        - NLU
      operationId: PutVisitorInformation
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutRequest'
      responses:
        '200':
          description: A PutVisitorInformation response
          schema:
            $ref: '#/definitions/PutResponse'
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-amazon-apigateway-integration:
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin : "'*'"
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - CORS
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods : "'*'"
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: |
                {}
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
              
  /putVisitorInformationValidateOtp:
    post:
      summary: The endpoint to validate OTP.
      description: |
        This API takes in one or more messages from the client and returns
        one or more messages as a response. The API leverages the NLP
        backend functionality, paired with state and profile information
        and returns a context-aware reply.
      tags:
        - NLU
      operationId: PutVisitorInformationValidateOtp
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutRequestOTP'
      responses:
        '200':
          description: A PutVisitorInformationValidateOtp response
          schema:
            $ref: '#/definitions/PutResponse'
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-amazon-apigateway-integration:
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods : "'*'"
              method.response.header.Access-Control-Allow-Origin : "'*'"
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - CORS
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          "default":
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods : "'*'"
              method.response.header.Access-Control-Allow-Origin : "'*'"
            responseTemplates:
              application/json: |
                {}
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Headers:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
definitions:
  Empty:
    type: object
  PutRequest:
    type: object
    properties:
      phone_number:
        type: string
      name:
        type: string
      base64_encoded_image:
        type: string
  PutRequestOTP:
    type: object
    properties:
      otp:
        type: string
      identifier:
        type: string
  PutResponse:
    type: object
    properties:
      text:
        type: string
      id:
        type: string
  Message:
    type: object
    properties:
      type:
        type: string
      unstructured:
        $ref: '#/definitions/UnstructuredMessage'
  UnstructuredMessage:
    type: object
    properties:
      id:
        type: string
      text:
        type: string
      timestamp:
        type: string
        format: datetime
  ImageString:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
